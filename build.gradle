buildscript {
    ext.retrofit_version = '2.9.0'
    ext.kotlin_version = '1.5.30'

    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.github.bjoernq:unmockplugin:0.7.8'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-parcelize'
}

apply plugin: 'de.mobilej.unmock'

android {
    compileSdkVersion 30

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 2
        // The versionCode to which the current version's cache is backwards compatible with. Update after breaking changes that require a cache reset.
        buildConfigField "int", "CACHE_COMPATIBILITY", "2"
        versionName "2.0.0"

        // in this files proguard rules are exposed and can be used by the application project
        consumerProguardFiles 'proguard-library-consumer.pro'

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    api 'androidx.core:core-ktx:1.6.0' // required for FileProvider and Annotations

    // ReactiveX
    api 'io.reactivex.rxjava2:rxandroid:2.1.1' // rxjava (observables)
    api 'io.reactivex.rxjava2:rxjava:2.2.21' // RxAndroid releases are few and far between, so depend on latest version for bug fixes and new features

    // network
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version" // http requests
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version" // json parsing
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version" // retrofit with observables
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.0'
    api 'com.squareup.picasso:picasso:2.71828' // ion provides a picasso wrapper adding an authorization header to requests
    implementation 'androidx.exifinterface:exifinterface:1.3.3' // ensure picasso's dependency to support library is up-to-date

    // misc
    implementation 'org.apache.commons:commons-compress:1.20'
    api 'net.danlew:android.joda:2.10.6' // better DateTime handling
    testImplementation "joda-time:joda-time:2.10.10" // Time zone db for unit tests

    testImplementation 'junit:junit:4.13.2'
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation "org.jetbrains.spek:spek-api:1.0.89"
    testImplementation "nl.jqno.equalsverifier:equalsverifier:3.1.9"

    androidTestImplementation 'androidx.annotation:annotation:1.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test:rules:1.4.0'

    unmock 'org.robolectric:android-all:4.3_r2-robolectric-0'
}

// allow unit tests to use some basic android library classes
unMock {
    keep "android.net.Uri"
    keepStartingWith "android.text."
    keepStartingWith "org.ccil.cowan.tagsoup."
    keepStartingWith "libcore."
    keepStartingWith "com.android.internal.util."
    keepAndRename "java.nio.charset.Charsets" to "xjava.nio.charset.Charsets"
}
