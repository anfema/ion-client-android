apply plugin: 'com.android.library'
apply plugin: 'me.tatarka.retrolambda' // apply last because it might interfere with android-apt commands
apply plugin: 'de.mobilej.unmock'
apply plugin: 'kotlin-android'

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'me.tatarka:gradle-retrolambda:3.2.3' // activate lambda expressions (on maven central)
        classpath 'me.tatarka.retrolambda.projectlombok:lombok.ast:0.2.3.a2'
        classpath 'de.mobilej.unmock:UnMockPlugin:0.3.6'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }

    // Exclude the version that the android plugin depends on.
    configurations.classpath.exclude group: 'com.android.tools.external.lombok'
}

repositories {
    maven {
        url "http://repository.jetbrains.com/all" // source of Spek
    }
}

android {
    compileSdkVersion compile_sdk_version
    buildToolsVersion build_tools_version

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion target_sdk_version
        versionCode 2
        // The versionCode to which the current version's cache is backwards compatible with. Update after breaking changes that require a cache reset.
        buildConfigField "int", "CACHE_COMPATIBILITY", "2"
        versionName "2.0.0"

        // in this files proguard rules are exposed and can be used by the application project
        consumerProguardFiles 'proguard-library-consumer.pro'
    }

    buildTypes {
        debug {
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:support-v4:$support_version" // required for FileProvider and Annotations

    compile 'com.squareup.retrofit2:retrofit:2.0.0' // http requests
    compile 'com.squareup.retrofit2:converter-gson:2.0.0' // json parsing
    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.0' // retrofit with observables
    compile 'io.reactivex:rxandroid:1.0.1' // rxjava (observables)
    compile 'io.reactivex:rxjava:1.0.14' // RxAndroid releases are few and far between, so depend on latest version for bug fixes and new features.
    compile 'io.reactivex:rxjava-async-util:0.21.0' // support of Async.start()
    compile 'com.artemzin.rxjava:proguard-rules:1.0.14.2' // ProGuard rules for RxJava
    // compile "com.squareup.picasso:picasso-2.6.0-20161215.003811-31@aar" // ion provides a picasso wrapper adding an authorization header to requests
    compile('com.jakewharton.picasso:picasso2-okhttp3-downloader:1.0.2') {
        exclude group: "com.squareup.picasso", module: "picasso"
    }
    compile 'org.apache.commons:commons-compress:1.12'
    compile 'joda-time:joda-time:2.9' // better DateTime handling

    testCompile 'junit:junit:4.12'
    testCompile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testCompile "org.jetbrains.spek:spek:1.0.25"
    testCompile "nl.jqno.equalsverifier:equalsverifier:2.1"
}

// allow unit tests to use some basic android library classes
unMock {
    // URI to download the android-all.jar from. e.g. https://oss.sonatype.org/content/groups/public/org/robolectric/android-all/
    downloadFrom 'https://oss.sonatype.org/content/groups/public/org/robolectric/android-all/4.3_r2-robolectric-0/android-all-4.3_r2-robolectric-0.jar'

    keep "android.net.Uri"
    keepStartingWith "android.text."
    keepStartingWith "org.ccil.cowan.tagsoup."
    keepStartingWith "libcore."
    keepStartingWith "com.android.internal.util."
    keepAndRename "java.nio.charset.Charsets" to "xjava.nio.charset.Charsets"
}

// output in gradle console
println("********************************** ------------------ **********************************")
println("debugging: environment variable JAVA8_HOME must be set and point to Java 8 home folder")
println("JAVA8_HOME: " + System.getenv("JAVA8_HOME"))
println("********************************** ------------------ **********************************")
